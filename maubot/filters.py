"""–§–∏–ª—å—Ç—Ä—ã –±–æ—Ç–∞.

–§–∏–ª—å—Ç—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –∏–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∫
–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.
–í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞.
–ü–æ—Å–∫–æ–ª—å–∫—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–µ –≤ –æ–¥–Ω–æ–º —Ä–æ—É—Ç–µ—Ä–µ.
"""

from aiogram.enums import ChatMemberStatus
from aiogram.filters import Filter
from aiogram.types import CallbackQuery, Message

from maubot.config import sm
from maubot.context import get_context
from maubot.messages import NO_JOIN_MESSAGE, NO_ROOM_MESSAGE


async def _send(event: CallbackQuery | Message, message: str) -> None:
    if isinstance(event, CallbackQuery) and event.message is not None:
        await event.message.answer(message)

    elif isinstance(event, Message):
        await event.answer(message)


async def _is_admin(event: CallbackQuery | Message) -> bool:
    if isinstance(event, Message):
        chat = event.chat
    elif isinstance(event, CallbackQuery):
        if event.message is None:
            return False
        chat = event.message.chat

    if event.from_user is None:
        return False
    member = await chat.get_member(event.from_user.id)
    return member.status in (
        ChatMemberStatus.CREATOR,
        ChatMemberStatus.ADMINISTRATOR,
    )


# –§–∏–ª—å—Ç—Ä—ã
# =======


class ActiveGame(Filter):
    """–§–∏–ª—å—Ç—Ä –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã.

    –î–∞—ë—Ç –≥–∞—Ä–∞–Ω—Ç–∏—é —á—Ç–æ –≤ –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ –∏–º–µ–µ—Ç—Å—è –∏–≥—Ä–∞.
    """

    async def __call__(self, event: CallbackQuery | Message) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∏–≥—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."""
        if get_context(sm, event).game is None:
            await _send(event, NO_ROOM_MESSAGE)
            return False

        return True


class ActivePlayer(Filter):
    """–§–∏–ª—å—Ç—Ä –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞.

    –ù–µ—Ç, –æ–Ω –ø—Ä–æ—Å—Ç–æ –¥–∞—ë—Ç –≥–∞—Ä–∞–Ω—Ç–∏–∏ —á—Ç–æ –µ—Å—Ç—å –∫–∞–∫ –∏–≥—Ä–∞, —Ç–∞–∫ –∏ –∏–≥—Ä–æ–∫.
    –ü–æ—Å–∫–æ–ª—å–∫—É –∏–≥—Ä–æ–∫ –Ω–µ –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –±–µ–∑ –∏–≥—Ä—ã, –Ω–∞–ª–∏—á–∏–µ –∏–≥—Ä—ã —Ç–∞–∫–∂–µ
    –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è.
    """

    async def __call__(self, event: CallbackQuery | Message) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –µ—Å—Ç—å –≤ –∏–≥—Ä–µ."""
        context = get_context(sm, event)

        if context.game is None:
            await _send(event, NO_ROOM_MESSAGE)
            return False

        if context.player is None:
            await _send(event, NO_JOIN_MESSAGE)
            return False

        return True


class GameOwner(Filter):
    """–§–∏–ª—å—Ç—Ä —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã.

    –ü–æ–º–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–Ω–∞—Ç—ã –∏ –∏–≥—Ä–æ–∫–∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç
    —á—Ç–æ–±—ã –≤—ã–∑–≤–∞–≤—à–∏–π –∫–æ–º–∞–Ω–¥—É –∏–≥—Ä–æ–∫ –±—ã–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–º–Ω–∞—Ç—ã.
    –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.
    """

    async def __call__(self, event: CallbackQuery | Message) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã."""
        context = get_context(sm, event)

        if context.game is None:
            await _send(event, NO_ROOM_MESSAGE)
            return False

        if await _is_admin(event):
            return True

        if context.player is None:
            await _send(event, NO_JOIN_MESSAGE)
            return False

        if context.player == context.game.owner:
            await _send(
                event,
                "üîë –í—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã.",
            )
            return False

        return True


class NowPlaying(Filter):
    """–§–∏–ª—å—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞.

    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–∂–µ—Ç –ª–∏ –≤—ã–∑–≤–∞–≤—à–∏–π —Å–æ–±—ã—Ç–∏–µ –∏–≥—Ä–æ–∫ —Å–¥–µ–ª–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.
    –î–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∏–≥—Ä–æ–≤—ã—Ö –∫–Ω–æ–ø–∫–∞—Ö, –∫–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –≤—ã–±–æ—Ä
    —Ü–≤–µ—Ç–∞, –æ–±–º–µ–Ω —Ä—É–∫–∞–º–∏ –∏–ª–∏ —Ä–µ–≤–æ–ª—å–≤–µ—Ä.
    –ß—Ç–æ–±—ã –Ω–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º –≤–º–µ—â–∞—Ç—å—Å—è –≤ –∏–≥—Ä—É.

    –û–¥–Ω–∞–∫–æ –µ—Å–ª–∏ –ø–æ–∂–µ–ª–∞–µ—Ç–µ, —ç—Ç–æ —Ç–æ–∂–µ –º–æ–∂–Ω–æ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏
    –∏–≥—Ä–æ–≤—ã—Ö —Ä–µ–∂–∏–º–æ–≤.
    """

    async def __call__(self, event: CallbackQuery) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ç–µ–∫—É—â–∏–π –∏–≥—Ä–æ–∫ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥."""
        ctx = get_context(sm, event)
        if ctx.player is None or not ctx.player.can_play:
            await event.answer("üçâ –ê –≤—ã —Ç–æ—á–Ω–æ —Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç–µ?")
            return False
        return True
