"""–ò–≥—Ä–æ–≤–æ–π –∂—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π.

–ò–≥—Ä–æ–≤–æ–π –∂—É—Ä–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –µ–≥–æ
–≤ —á–∞—Ç.
"""

from datetime import datetime
from typing import TYPE_CHECKING, NamedTuple

from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, Message

if TYPE_CHECKING:
    from maubot.uno.game import UnoGame

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã
# ======================

# PRIORITY_ICONS = ("‚öôÔ∏è", "‚òï", "üç∞", "üëÄ", "‚ö†Ô∏è")

# class EventPriority(IntEnum):
#     """–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–æ–±—ã—Ç–∏—è.

#     –£ –∫–∞–∂–¥–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –µ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç
#     –Ω–∞—Å–∫–æ–ª—å–∫–æ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –≤–∞–∂–Ω–æ.
#     –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –æ–Ω–æ –Ω–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ.

#     - DEBUG: –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
#     - INFO: –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –ø–æ —Ö–æ–¥—É –∏–≥—Ä—ã
#     - SUCCESS: –ë–æ–ª–µ–µ –≤–∞–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –≤–∑—è—Ç–∏–µ –∫–∞—Ä—Ç.
#     - WARNING: –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –∫–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –æ–ø—É—Å—Ç–æ—à–µ–Ω–∏–µ –∫–æ–ª–æ–¥—ã.
#     - ERROR: –û—à–∏–±–∫–∏ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–¥–∞—ë—Ç—Å—è —Ä–µ—à–∏—Ç—å —Å–∞–º–æ–º—É.
#     """

#     DEBUG = 0
#     INFO = 1
#     SUCCESS = 2
#     WARNING = 3
#     ERROR = 4

#     def __str__(self) -> str:
#         """–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –≤ –≤–∏–¥–µ —Å–∏–º–≤–æ–ª–∞."""
#         return PRIORITY_ICONS[self.value]

class Event(NamedTuple):
    """–ó–∞–ø–∏—Å—å –æ–± –∏–≥—Ä–æ–≤–æ–º —Å–æ–±—ã—Ç–∏–∏.

    –°–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ç–æ—Ä—É—é —Ü–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å—å –æ —Ö–æ–¥–µ –∏–≥—Ä—ã.
    –ü—Ä–∏–º–µ—Ä–æ–º —Å–æ–±—ã—Ç–∏—è –º–æ–∂–µ—Ç —Å–ª—É–∂–∏—Ç—å –≤–∑—è—Ç–∏–µ –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–æ–º, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ
    –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.

    –ö–∞–∂–¥–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ç–æ—Ä—É—é –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.
    –ö–æ–≥–¥–∞ –æ–Ω–æ –±—ã–ª–æ —Å–æ–≤–µ—Ä—à–µ–Ω–æ, –∫—Ç–æ –±—ã–ª –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–æ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω–æ –≤–∞–∂–Ω–æ–µ.
    """

    date: datetime
    text: str
    # icon: str | None
    # priority: EventPriority

    def __str__(self) -> str:
        """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏."""
        # icon = self.icon if self.icon is not None else self.priority
        return f"{self.text}\n"


# –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
# ==============

class Journal:
    """–ö–ª–∞—Å—Å –∂—É—Ä–Ω–∞–ª–∞ –∏–≥—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã –∏ –æ–ø—Ä–∞–≤–∫–∏ –∏–≥—Ä–æ–≤—ã—Ö
    —Å–æ–±—ã—Ç–∏–π –≤ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∏–≥—Ä–æ–π —á–∞—Ç.
    –ö–∞–∂–¥—ã–π –∂—É—Ä–Ω–∞–ª –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏–≥—Ä–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤
    –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–µ–π—Å—Ç–≤–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
    """

    def __init__(self, game: 'UnoGame', bot: Bot):
        self.game: UnoGame = game
        self.bot: Bot = bot
        self.events: list[Event] = []
        self.reply_markup: InlineKeyboardMarkup | None = None
        self.message: Message | None = None

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–æ–º
    # ===================

    def add(self,
        text: str,
        # icon: str | None = None,
        # priority: EventPriority | int = EventPriority.INFO
    ) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∂—É—Ä–Ω–∞–ª."""
        self.events.append(Event(
            date=datetime.now(),
            text=text,
            # icon=icon,
            # priority=priority
        ))

    # def get_event(self, index: int) -> Event | None:
    #     pass

    # def edit_event(self, index: int, event: Event) -> None:
    #     pass

    # def remove_event(self, index: int) -> None:
    #     pass

    def set_markup(self,
        reply_markup: InlineKeyboardMarkup | None = None
    ) -> None:
        self.reply_markup = reply_markup

    def get_journal_message(self):
        res = ""
        for event in self.events:
            res += str(event)
        return res

    # async def delete_journal(self):
    #     if self.message is None:
    #         return

    #     max_priority = max(self.events, key=lambda event: event.priority)
    #     if max_priority > 1:
    #         return

    #     await self.message.delete()

    async def send_journal(self):
        journal_message = self.get_journal_message()
        if self.message is None:
            self.message = await self.bot.send_message(
                chat_id=self.game.chat_id,
                text=journal_message,
                reply_markup=self.reply_markup
            )
        else:
            await self.message.edit_text(
                text=journal_message,
                reply_markup=self.reply_markup
            )

    def clear(self) -> None:
        """–û—á–∏—â–∞–µ—Ç –∂—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π."""
        # await self.delete_journal()
        self.events.clear()
        self.reply_markup = None
        self.message = None


    # –ú–∞–≥–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã
    # =================

    def __len__(self) -> int:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –∂—É—Ä–Ω–∞–ª–µ."""
        return len(self.events)

    def __getitem__(self, i: int) -> Event:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –ø–æ –∏–Ω–¥–µ–∫—Å—É."""
        return self.events[i]

    def __setitem__(self, i: int, event: Event) -> None:
        """–ò–∑–º–µ–Ω—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –ø–æ –∏–Ω–¥–µ–∫—Å—É."""
        if not isinstance(event, Event):
            return ValueError("Journal can only contains Event instances")
        self.events[i] = event
